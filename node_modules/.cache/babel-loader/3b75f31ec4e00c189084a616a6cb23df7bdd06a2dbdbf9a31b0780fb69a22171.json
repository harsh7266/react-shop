{"ast":null,"code":"var _jsxFileName = \"C:\\\\react course\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"blue\";\n      showAlert('bluemode has been enabled', 'sucess');\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert('lightmode has been enabled', 'sucess');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      alert: showalert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"harsh text analyzer\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"enter text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","Textform","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","showalert","fileName","_jsxFileName","lineNumber","columnNumber","title","className","heading","_c","$RefreshReg$"],"sources":["C:/react course/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Textform from \"./components/Textform\";\r\nimport { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const showAlert=(message,type)=>{\r\n        setAlert({\r\n          msg:message,\r\n          type:type\r\n        })\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"blue\";\r\n      showAlert('bluemode has been enabled','sucess')\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert('lightmode has been enabled','sucess')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Alert alert={showalert}/>\r\n      <Navbar title=\"harsh text analyzer\" mode={mode} toggleMode={toggleMode} />\r\n      <div className=\"container my-3\">\r\n        <Textform heading=\"enter text to analyze\" mode={mode} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC1BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;EACR,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIR,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC5CR,SAAS,CAAC,2BAA2B,EAAC,QAAQ,CAAC;IACjD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,4BAA4B,EAAC,QAAQ,CAAC;IAClD;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEY;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxBvB,OAAA,CAACL,MAAM;MAAC6B,KAAK,EAAC,qBAAqB;MAACnB,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EvB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BlB,OAAA,CAACJ,QAAQ;QAAC8B,OAAO,EAAC,uBAAuB;QAACrB,IAAI,EAAEA;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA,eACN,CAAC;AAEP;AAACnB,EAAA,CAhCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}